// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SiGeP.Model;

#nullable disable

namespace SiGeP.Model.Migrations
{
    [DbContext(typeof(DbModelContext))]
    [Migration("20240818231942_NewMigration")]
    partial class NewMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Proxies:ChangeTracking", false)
                .HasAnnotation("Proxies:CheckEquality", false)
                .HasAnnotation("Proxies:LazyLoading", true)
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("SiGeP.Model.Model.Address.Address", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CityId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("VARCHAR");

                    b.Property<DateTime?>("Deleted")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("VARCHAR");

                    b.Property<int?>("NeighborhoodId")
                        .HasColumnType("int");

                    b.Property<string>("NeighborhoodName")
                        .HasMaxLength(64)
                        .HasColumnType("VARCHAR");

                    b.Property<int>("ProvinceId")
                        .HasColumnType("int");

                    b.Property<string>("StreetNumber")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("VARCHAR");

                    b.Property<DateTime?>("Updated")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("VARCHAR");

                    b.HasKey("Id");

                    b.HasIndex("CityId");

                    b.HasIndex("Deleted");

                    b.HasIndex("NeighborhoodId");

                    b.HasIndex("ProvinceId");

                    b.ToTable("Address");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CityId = 1,
                            Created = new DateTime(2024, 8, 18, 20, 19, 42, 84, DateTimeKind.Local).AddTicks(9896),
                            CreatedBy = "System",
                            DeletedBy = "",
                            NeighborhoodId = 1,
                            NeighborhoodName = "Centro",
                            ProvinceId = 1,
                            StreetNumber = "1234",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 2,
                            CityId = 1,
                            Created = new DateTime(2024, 8, 18, 20, 19, 42, 84, DateTimeKind.Local).AddTicks(9915),
                            CreatedBy = "System",
                            DeletedBy = "",
                            NeighborhoodId = 1,
                            NeighborhoodName = "Centro 222",
                            ProvinceId = 1,
                            StreetNumber = "1234",
                            UpdatedBy = ""
                        });
                });

            modelBuilder.Entity("SiGeP.Model.Model.Address.City", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("VARCHAR");

                    b.Property<DateTime?>("Deleted")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("VARCHAR");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProvinceId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Updated")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("VARCHAR");

                    b.HasKey("Id");

                    b.HasIndex("Deleted");

                    b.HasIndex("ProvinceId");

                    b.ToTable("City");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Created = new DateTime(2024, 8, 18, 20, 19, 42, 84, DateTimeKind.Local).AddTicks(9796),
                            CreatedBy = "System",
                            DeletedBy = "",
                            Name = "La Plata",
                            ProvinceId = 1,
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 2,
                            Created = new DateTime(2024, 8, 18, 20, 19, 42, 84, DateTimeKind.Local).AddTicks(9797),
                            CreatedBy = "System",
                            DeletedBy = "",
                            Name = "Córdoba Capital",
                            ProvinceId = 2,
                            UpdatedBy = ""
                        });
                });

            modelBuilder.Entity("SiGeP.Model.Model.Address.Neighborhood", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CityId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("VARCHAR");

                    b.Property<DateTime?>("Deleted")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("VARCHAR");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Updated")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("VARCHAR");

                    b.HasKey("Id");

                    b.HasIndex("CityId");

                    b.HasIndex("Deleted");

                    b.ToTable("Neighborhood");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CityId = 1,
                            Created = new DateTime(2024, 8, 18, 20, 19, 42, 84, DateTimeKind.Local).AddTicks(9828),
                            CreatedBy = "System",
                            DeletedBy = "",
                            Name = "Centro",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 2,
                            CityId = 2,
                            Created = new DateTime(2024, 8, 18, 20, 19, 42, 84, DateTimeKind.Local).AddTicks(9830),
                            CreatedBy = "System",
                            DeletedBy = "",
                            Name = "Nueva Córdoba",
                            UpdatedBy = ""
                        });
                });

            modelBuilder.Entity("SiGeP.Model.Model.Address.Province", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("VARCHAR");

                    b.Property<DateTime?>("Deleted")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("VARCHAR");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Updated")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("VARCHAR");

                    b.HasKey("Id");

                    b.HasIndex("Deleted");

                    b.ToTable("Province");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Created = new DateTime(2024, 8, 18, 20, 19, 42, 84, DateTimeKind.Local).AddTicks(9766),
                            CreatedBy = "System",
                            DeletedBy = "",
                            Name = "Buenos Aires",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 2,
                            Created = new DateTime(2024, 8, 18, 20, 19, 42, 84, DateTimeKind.Local).AddTicks(9768),
                            CreatedBy = "System",
                            DeletedBy = "",
                            Name = "Córdoba",
                            UpdatedBy = ""
                        });
                });

            modelBuilder.Entity("SiGeP.Model.Model.Appointment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("VARCHAR");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("VARCHAR");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Deleted")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("VARCHAR");

                    b.Property<DateTime?>("Updated")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("VARCHAR");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.HasIndex("Deleted");

                    b.ToTable("Appointment");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "1234 Centro, La Plata",
                            Created = new DateTime(2024, 8, 18, 20, 19, 42, 85, DateTimeKind.Local).AddTicks(9),
                            CreatedBy = "System",
                            CustomerId = 1,
                            Date = new DateTime(2024, 8, 19, 20, 19, 42, 84, DateTimeKind.Local).AddTicks(9992),
                            DeletedBy = "",
                            UpdatedBy = ""
                        });
                });

            modelBuilder.Entity("SiGeP.Model.Model.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("VARCHAR");

                    b.Property<DateTime?>("Deleted")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("VARCHAR");

                    b.Property<int>("DoctorId")
                        .HasColumnType("int");

                    b.Property<int>("PersonId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Updated")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("VARCHAR");

                    b.HasKey("Id");

                    b.HasIndex("Deleted");

                    b.HasIndex("DoctorId");

                    b.HasIndex("PersonId");

                    b.ToTable("Customer");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Created = new DateTime(2024, 8, 18, 20, 19, 42, 81, DateTimeKind.Local).AddTicks(8781),
                            CreatedBy = "System",
                            DeletedBy = "",
                            DoctorId = 1,
                            PersonId = 1,
                            UpdatedBy = ""
                        });
                });

            modelBuilder.Entity("SiGeP.Model.Model.Doctor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("VARCHAR");

                    b.Property<DateTime?>("Deleted")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("VARCHAR");

                    b.Property<int>("PersonId")
                        .HasColumnType("int");

                    b.Property<string>("Specialty")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("VARCHAR");

                    b.Property<DateTime?>("Updated")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("VARCHAR");

                    b.HasKey("Id");

                    b.HasIndex("Deleted");

                    b.HasIndex("PersonId");

                    b.ToTable("Doctor");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Created = new DateTime(2024, 8, 18, 20, 19, 42, 84, DateTimeKind.Local).AddTicks(9967),
                            CreatedBy = "System",
                            DeletedBy = "",
                            PersonId = 2,
                            Specialty = "Cardiología",
                            UpdatedBy = ""
                        });
                });

            modelBuilder.Entity("SiGeP.Model.Model.Gender", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("VARCHAR");

                    b.Property<DateTime?>("Deleted")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("VARCHAR");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("VARCHAR");

                    b.Property<DateTime?>("Updated")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("VARCHAR");

                    b.HasKey("Id");

                    b.HasIndex("Deleted");

                    b.ToTable("Gender");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Created = new DateTime(2024, 8, 18, 20, 19, 42, 81, DateTimeKind.Local).AddTicks(8967),
                            CreatedBy = "System",
                            DeletedBy = "",
                            Name = "Masculino",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 2,
                            Created = new DateTime(2024, 8, 18, 20, 19, 42, 81, DateTimeKind.Local).AddTicks(8969),
                            CreatedBy = "System",
                            DeletedBy = "",
                            Name = "Femenino",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 3,
                            Created = new DateTime(2024, 8, 18, 20, 19, 42, 81, DateTimeKind.Local).AddTicks(8970),
                            CreatedBy = "System",
                            DeletedBy = "",
                            Name = "Otro",
                            UpdatedBy = ""
                        });
                });

            modelBuilder.Entity("SiGeP.Model.Model.MedicalRecord", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("VARCHAR");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Deleted")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("VARCHAR");

                    b.Property<string>("Diagnosis")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("VARCHAR");

                    b.Property<string>("Treatment")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("VARCHAR");

                    b.Property<DateTime?>("Updated")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("VARCHAR");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.HasIndex("Deleted");

                    b.ToTable("MedicalRecord");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Created = new DateTime(2024, 8, 18, 20, 19, 42, 85, DateTimeKind.Local).AddTicks(37),
                            CreatedBy = "System",
                            CustomerId = 1,
                            Date = new DateTime(2024, 8, 18, 20, 19, 42, 85, DateTimeKind.Local).AddTicks(30),
                            DeletedBy = "",
                            Diagnosis = "Hipertensión",
                            Treatment = "Dieta baja en sodio",
                            UpdatedBy = ""
                        });
                });

            modelBuilder.Entity("SiGeP.Model.Model.Payment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("AppointmentId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("VARCHAR");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Deleted")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("VARCHAR");

                    b.Property<DateTime?>("Updated")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("VARCHAR");

                    b.HasKey("Id");

                    b.HasIndex("AppointmentId")
                        .IsUnique();

                    b.HasIndex("Deleted");

                    b.ToTable("Payment");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Amount = 200.00m,
                            AppointmentId = 1,
                            Created = new DateTime(2024, 8, 18, 20, 19, 42, 85, DateTimeKind.Local).AddTicks(67),
                            CreatedBy = "System",
                            Date = new DateTime(2024, 8, 18, 20, 19, 42, 85, DateTimeKind.Local).AddTicks(62),
                            DeletedBy = "",
                            UpdatedBy = ""
                        });
                });

            modelBuilder.Entity("SiGeP.Model.Model.Person.Person", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AddressId")
                        .HasColumnType("int");

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("VARCHAR");

                    b.Property<string>("DNI")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("VARCHAR");

                    b.Property<DateTime?>("Deleted")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("VARCHAR");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("VARCHAR");

                    b.Property<int>("GenderId")
                        .HasColumnType("int");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("VARCHAR");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("VARCHAR");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("VARCHAR");

                    b.Property<DateTime?>("Updated")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("VARCHAR");

                    b.HasKey("Id");

                    b.HasIndex("AddressId");

                    b.HasIndex("Deleted");

                    b.HasIndex("GenderId");

                    b.ToTable("Person");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AddressId = 1,
                            BirthDate = new DateTime(1985, 5, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Created = new DateTime(2024, 8, 18, 20, 19, 42, 84, DateTimeKind.Local).AddTicks(9944),
                            CreatedBy = "System",
                            DNI = "20123456789",
                            DeletedBy = "",
                            Email = "juan.perez@example.com",
                            GenderId = 1,
                            LastName = "Pérez",
                            Name = "Juan",
                            Phone = "1234567890",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 2,
                            AddressId = 2,
                            BirthDate = new DateTime(1978, 11, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Created = new DateTime(2024, 8, 18, 20, 19, 42, 84, DateTimeKind.Local).AddTicks(9946),
                            CreatedBy = "System",
                            DNI = "20987654321",
                            DeletedBy = "",
                            Email = "maria.gonzalez@example.com",
                            GenderId = 2,
                            LastName = "González",
                            Name = "Dr. María",
                            Phone = "0987654321",
                            UpdatedBy = ""
                        });
                });

            modelBuilder.Entity("SiGeP.Model.Model.Reminder", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AppointmentId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("VARCHAR");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Deleted")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("VARCHAR");

                    b.Property<string>("SendMode")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("VARCHAR");

                    b.Property<bool>("Sent")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("Updated")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("VARCHAR");

                    b.HasKey("Id");

                    b.HasIndex("AppointmentId")
                        .IsUnique();

                    b.HasIndex("Deleted");

                    b.ToTable("Reminder");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AppointmentId = 1,
                            Created = new DateTime(2024, 8, 18, 20, 19, 42, 85, DateTimeKind.Local).AddTicks(92),
                            CreatedBy = "System",
                            Date = new DateTime(2024, 8, 18, 20, 19, 42, 85, DateTimeKind.Local).AddTicks(91),
                            DeletedBy = "",
                            SendMode = "Email",
                            Sent = false,
                            UpdatedBy = ""
                        });
                });

            modelBuilder.Entity("SiGeP.Model.ModelUser.AppUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("VARCHAR");

                    b.Property<DateTime?>("Deleted")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("VARCHAR");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("VARCHAR");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("VARCHAR");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Updated")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("VARCHAR");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AppUser");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Created = new DateTime(2024, 8, 18, 20, 19, 42, 84, DateTimeKind.Local).AddTicks(9707),
                            CreatedBy = "System",
                            DeletedBy = "",
                            Name = "admin",
                            Password = "admin",
                            RoleId = 1,
                            UpdatedBy = ""
                        });
                });

            modelBuilder.Entity("SiGeP.Model.ModelUser.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("VARCHAR");

                    b.Property<DateTime?>("Deleted")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("VARCHAR");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("VARCHAR");

                    b.Property<string>("Permissions")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("VARCHAR");

                    b.Property<DateTime?>("Updated")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("VARCHAR");

                    b.HasKey("Id");

                    b.ToTable("Role");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Created = new DateTime(2024, 8, 18, 20, 19, 42, 85, DateTimeKind.Local).AddTicks(122),
                            CreatedBy = "System",
                            DeletedBy = "",
                            Name = "Admin",
                            Permissions = "FullAccess",
                            UpdatedBy = ""
                        });
                });

            modelBuilder.Entity("SiGeP.Model.Model.Address.Address", b =>
                {
                    b.HasOne("SiGeP.Model.Model.Address.City", "City")
                        .WithMany()
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SiGeP.Model.Model.Address.Neighborhood", "Neighborhood")
                        .WithMany()
                        .HasForeignKey("NeighborhoodId");

                    b.HasOne("SiGeP.Model.Model.Address.Province", "Province")
                        .WithMany()
                        .HasForeignKey("ProvinceId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("City");

                    b.Navigation("Neighborhood");

                    b.Navigation("Province");
                });

            modelBuilder.Entity("SiGeP.Model.Model.Address.City", b =>
                {
                    b.HasOne("SiGeP.Model.Model.Address.Province", "Province")
                        .WithMany()
                        .HasForeignKey("ProvinceId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Province");
                });

            modelBuilder.Entity("SiGeP.Model.Model.Address.Neighborhood", b =>
                {
                    b.HasOne("SiGeP.Model.Model.Address.City", "City")
                        .WithMany()
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("City");
                });

            modelBuilder.Entity("SiGeP.Model.Model.Appointment", b =>
                {
                    b.HasOne("SiGeP.Model.Model.Customer", "Customer")
                        .WithMany("Appointments")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("SiGeP.Model.Model.Customer", b =>
                {
                    b.HasOne("SiGeP.Model.Model.Doctor", "Doctor")
                        .WithMany()
                        .HasForeignKey("DoctorId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SiGeP.Model.Model.Person.Person", "Person")
                        .WithMany()
                        .HasForeignKey("PersonId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Doctor");

                    b.Navigation("Person");
                });

            modelBuilder.Entity("SiGeP.Model.Model.Doctor", b =>
                {
                    b.HasOne("SiGeP.Model.Model.Person.Person", "Person")
                        .WithMany()
                        .HasForeignKey("PersonId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Person");
                });

            modelBuilder.Entity("SiGeP.Model.Model.MedicalRecord", b =>
                {
                    b.HasOne("SiGeP.Model.Model.Customer", "Customer")
                        .WithMany("MedicalRecords")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("SiGeP.Model.Model.Payment", b =>
                {
                    b.HasOne("SiGeP.Model.Model.Appointment", "Appointment")
                        .WithOne("Payment")
                        .HasForeignKey("SiGeP.Model.Model.Payment", "AppointmentId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Appointment");
                });

            modelBuilder.Entity("SiGeP.Model.Model.Person.Person", b =>
                {
                    b.HasOne("SiGeP.Model.Model.Address.Address", "Address")
                        .WithMany()
                        .HasForeignKey("AddressId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SiGeP.Model.Model.Gender", "Gender")
                        .WithMany()
                        .HasForeignKey("GenderId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Address");

                    b.Navigation("Gender");
                });

            modelBuilder.Entity("SiGeP.Model.Model.Reminder", b =>
                {
                    b.HasOne("SiGeP.Model.Model.Appointment", "Appointment")
                        .WithOne("Reminder")
                        .HasForeignKey("SiGeP.Model.Model.Reminder", "AppointmentId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Appointment");
                });

            modelBuilder.Entity("SiGeP.Model.ModelUser.AppUser", b =>
                {
                    b.HasOne("SiGeP.Model.ModelUser.Role", "Role")
                        .WithMany("AppUsers")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("SiGeP.Model.Model.Appointment", b =>
                {
                    b.Navigation("Payment")
                        .IsRequired();

                    b.Navigation("Reminder")
                        .IsRequired();
                });

            modelBuilder.Entity("SiGeP.Model.Model.Customer", b =>
                {
                    b.Navigation("Appointments");

                    b.Navigation("MedicalRecords");
                });

            modelBuilder.Entity("SiGeP.Model.ModelUser.Role", b =>
                {
                    b.Navigation("AppUsers");
                });
#pragma warning restore 612, 618
        }
    }
}
